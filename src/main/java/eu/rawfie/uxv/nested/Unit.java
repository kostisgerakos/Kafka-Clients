/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package eu.rawfie.uxv.nested;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public enum Unit {
  AMPERE, VOLT, DEGREES, DEGREESxDEGREES, METERS, BIT, BYTE, KILOGRAM, DECIBEL, KELVIN, CELCIUS, PASCAL, HERTZ, METER, METER_PER_SECOND, METER_PER_SECOND_PER_SECOND, SECOND, SIEMENS_PER_METER, NTU, NEWTON, PERCENT, PERCENTAGE, PARTS_PER_MILLION, PARTS_PER_BILLION, PSU, RADIAN, RADIAN_PER_SECOND, ROTATION_PER_MINUTE, OTHER, METERS_PER_SECOND, DECIBEL_MILLIWATT, MEGABITS_PER_SECOND, TBD  ;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"enum\",\"name\":\"Unit\",\"namespace\":\"eu.rawfie.uxv.nested\",\"symbols\":[\"AMPERE\",\"VOLT\",\"DEGREES\",\"DEGREESxDEGREES\",\"METERS\",\"BIT\",\"BYTE\",\"KILOGRAM\",\"DECIBEL\",\"KELVIN\",\"CELCIUS\",\"PASCAL\",\"HERTZ\",\"METER\",\"METER_PER_SECOND\",\"METER_PER_SECOND_PER_SECOND\",\"SECOND\",\"SIEMENS_PER_METER\",\"NTU\",\"NEWTON\",\"PERCENT\",\"PERCENTAGE\",\"PARTS_PER_MILLION\",\"PARTS_PER_BILLION\",\"PSU\",\"RADIAN\",\"RADIAN_PER_SECOND\",\"ROTATION_PER_MINUTE\",\"OTHER\",\"METERS_PER_SECOND\",\"DECIBEL_MILLIWATT\",\"MEGABITS_PER_SECOND\",\"TBD\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
}
